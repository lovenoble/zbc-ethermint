name: Publish ethermint node

on:
  workflow_dispatch:
    inputs:
      zbc_build_image_tag:
        description: 'Tag for zbc build docker image (defaul:latest)'
        required: true
        default: "latest"
        type: string
      ethermint_node_tag:
        description: 'ethermint node tag (default: latest)'
        default: "latest"
        type: string
        required: false

env:
  DOCKER_IMAGE: ghcr.io/zama-ai/ethermint-node

defaults:
  run:
    working-directory: ./ethermint

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ethermint

      - name: Use tag from workflow disptach (if workflow dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: echo "ethermint_TAG=${{ inputs.ethermint_node_tag }}" >> $GITHUB_ENV

      - name: Use tag from tag push (if tag push)
        if: github.event_name == 'push' && github.ref_type == 'tag'
        run: echo "ethermint_TAG=$GITHUB_REF_NAME" >> $GITHUB_ENV

      - name: Get version for all needed repositories
        working-directory: ./ethermint
        run: |
          echo "TFHE_RS_VERSION=$(./scripts/get_version_from_makefile.sh TFHE_RS_VERSION)" >> $GITHUB_ENV
          echo "GO_ETHEREUM_VERSION=$(./scripts/get_module_version.sh go.mod zama.ai/zbc-go-ethereum)" >> $GITHUB_ENV
          echo "FHEVM_GO_VERSION=$(./scripts/get_module_version.sh go.mod zama.ai/fhevm-go)" >> $GITHUB_ENV
          
      - name: Echo versions parsed from Makefile and go.mod
        run: |
          echo "TFHE_RS_VERSION: $TFHE_RS_VERSION"
          echo "GO_ETHEREUM_VERSION: $GO_ETHEREUM_VERSION"
          echo "FHEVM_GO_VERSION: $FHEVM_GO_VERSION"

      - name: Checkout go-ethereum
        uses: actions/checkout@v3
        with:
          repository: zama-ai/zbc-go-ethereum
          token: ${{ secrets.CONCRETE_ACTIONS_TOKEN }}
          path: ./ethermint/work_dir/zbc-go-ethereum
          ref: ${{ env.GO_ETHEREUM_VERSION }}

      - name: Checkout fhevm-go
        uses: actions/checkout@v3
        with:
          repository: zama-ai/fhevm-go
          token: ${{ secrets.CONCRETE_ACTIONS_TOKEN }}
          path: ./ethermint/work_dir/fhevm-go
          ref: ${{ env.FHEVM_GO_VERSION }}
          submodules: recursive


      - name: Check OS
        run: |
          lscpu
          uname -r
          lsb_release -a

      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

      - name: Check zbc build image docker tag
        run: |
          echo ${{ inputs.zbc_build_image_tag }}

      - name: Prepare docker build 
        working-directory: ./ethermint
        run: |
          make prepare-docker-publish

      - name: Login to GitHub Container Registry
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
          ls ${{ github.workspace }}/ethermint/work_dir
          tree -L 2 ${{ github.workspace }}/ethermint/work_dir

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4c0219f9ac95b02789c1075625400b2acbff50b1
        with:
          platforms: linux/amd64,linux/arm64
      
      - name: Build and push Docker image
        uses: docker/build-push-action@5176d81f87c23d6fc96624dfdbcd9f3830bbe445
        with:
          build_args: |
            ZBC_VERSION=${{ inputs.zbc_build_image_tag }}
          context: ./ethermint
          file: ./ethermint/docker/Dockerfile.ethermint-node.local
          push: true
          pull: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.ethermint_TAG }},${{ env.DOCKER_IMAGE }}:latest
          labels: zbc-ethermint-node

      - name: Check docker images
        working-directory: ./ethermint
        run: |
          docker images

      - name: Start build of dev image
        shell: bash
        env:
          SECRET_TOKEN: ${{ secrets.CONCRETE_ACTIONS_TOKEN }}
        run: |
          curl -L -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $SECRET_TOKEN" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/zama-ai/ethermint/actions/workflows/publish_developer_image.yml/dispatches \
          -d '{"inputs":{"ethermint_node_tag":"${{ env.ethermint_TAG }}"}}'
